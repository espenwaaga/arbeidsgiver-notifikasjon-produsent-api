name: build-deploy-app
on:
  push:
    paths:
    - "app/**/*"
    - "config/**/*"
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_REPOSITORY: ${{ github.repository }}

jobs:

  build-deploy-app:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v1

      - run: |
          docker login -u ${{ secrets.GHCR_PUSH_USERNAME }} -p ${{ secrets.GHCR_PUSH_TOKEN }} ${{ env.IMAGE_REGISTRY }}

          IMAGE_TAG=${{ hashFiles( 'app/**/*' ) }}
          echo "IMAGE_TAG=$IMAGE_TAG" | tee -a $GITHUB_ENV

          docker manifest inspect $IMAGE_REPOSITORY:$IMAGE_TAG > /dev/null
          echo "IMAGE_PUBLISHED=$?" | tee -a $GITHUB_ENV

      - if: env.IMAGE_PUBLISHED == '0'
        uses: actions/setup-java@v1
        with:
          java-version: '15.x'

      - if: env.IMAGE_PUBLISHED == '0'
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - if: env.IMAGE_PUBLISHED == '0'
        run: mvn -B package
        working-directory: app

      - if: env.IMAGE_PUBLISHED == '0'
        uses: docker/build-push-action@v2
        with:
          path: app
          push: true
          tags: ${{ format('{}:{}', env.IMAGE_REPOSITORY, env.IMAGE_TAG) }}

      - uses: nais/deploy/actions/deploy@v1
        env:
          IMAGE: ${{ format('{}/{}:{}', env.IMAGE_REGISTRY, env.IMAGE_REPOSITORY, env.IMAGE_TAG) }}
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: config/nais-application.yaml
